tosca_definitions_version: tosca_simple_yaml_1_3
metadata:
  template_author: CNA modeling tool
  template_name: TeaStore-PaaS-Beanstalk
  template_version: 0.1.0
description: Service template generated by the CNA modeling tool
topology_template:
  description: Topology template generated by the CNA modeling tool
  node_templates:
    order:
      type: cna.qualityModel.entities.DataAggregate
      metadata:
        label: Order
        fontSize: '12'
        size_width: '60'
        size_height: '30'
        position_xCoord: '1530'
        position_yCoord: '880'
      capabilities:
        provides_data: {}
    user:
      type: cna.qualityModel.entities.DataAggregate
      metadata:
        label: User
        fontSize: '12'
        size_width: '60'
        size_height: '30'
        position_xCoord: '1530'
        position_yCoord: '760'
      capabilities:
        provides_data: {}
    product:
      type: cna.qualityModel.entities.DataAggregate
      metadata:
        label: Product
        fontSize: '12'
        size_width: '60'
        size_height: '30'
        position_xCoord: '1530'
        position_yCoord: '820'
      capabilities:
        provides_data: {}
    image:
      type: cna.qualityModel.entities.DataAggregate
      metadata:
        label: Image
        fontSize: '12'
        size_width: '50'
        size_height: '20'
        position_xCoord: '920'
        position_yCoord: '590'
      capabilities:
        provides_data: {}
    aws_elastic_beanstalk:
      type: cna.qualityModel.entities.Compute.Infrastructure
      metadata:
        label: AWS Elastic Beanstalk
        fontSize: '14'
        size_width: '400'
        size_height: '90'
        position_xCoord: '690'
        position_yCoord: '1270'
      properties:
        kind: cloud-service
        environment_access: none
        maintenance: transparent
        provisioning: transparent
        supported_artifacts:
          - Beanstalk Application
        availability_zone: us-east-1a,us-east-1b,us-east-1c
        region: us-east-1
        supported_update_strategies:
          - replace
          - rolling
          - blue-green
        deployed_entities_scaling: automated-built-in
        self_scaling: automated-built-in
        enforced_resource_bounds: true
        assigned_networks: []
    aws_rds:
      type: cna.qualityModel.entities.Compute.Infrastructure
      metadata:
        label: AWS RDS
        fontSize: '14'
        size_width: '180'
        size_height: '90'
        position_xCoord: '1430'
        position_yCoord: '1270'
      properties:
        kind: cloud-service
        environment_access: none
        maintenance: transparent
        provisioning: transparent
        supported_artifacts:
          - RDS Instance
        availability_zone: us-east-1a,us-east-1b,us-east-1c
        region: us-east-1
        supported_update_strategies:
          - replace
        deployed_entities_scaling: manual
        self_scaling: automated-built-in
        enforced_resource_bounds: false
        assigned_networks: []
    add_service_location:
      type: cna.qualityModel.entities.Endpoint
      metadata:
        label: Add Service Location
        fontSize: '11'
        size_width: '60'
        size_height: '60'
        position_xCoord: '1110'
        position_yCoord: '80'
      capabilities:
        endpoint:
          properties:
            protocol: HTTP PUT
            port: ''
            secure: false
            url_path: /services/{name}/location
            port_name: ''
            network_name: ''
            initiator: ''
            ports: {}
            rate_limiting: none
            idempotent: false
    remove_service_location:
      type: cna.qualityModel.entities.Endpoint
      metadata:
        label: Remove Service Location
        fontSize: '11'
        size_width: '60'
        size_height: '60'
        position_xCoord: '1160'
        position_yCoord: '110'
      capabilities:
        endpoint:
          properties:
            protocol: HTTP DELETE
            port: ''
            secure: false
            url_path: /services{name}/location
            port_name: ''
            network_name: ''
            initiator: ''
            ports: {}
            rate_limiting: none
            idempotent: false
    getinstances:
      type: cna.qualityModel.entities.Endpoint
      metadata:
        label: Getinstances
        fontSize: '11'
        size_width: '60'
        size_height: '60'
        position_xCoord: '1220'
        position_yCoord: '120'
      capabilities:
        endpoint:
          properties:
            protocol: HTTP GET
            port: ''
            secure: false
            url_path: /services/{name}
            port_name: ''
            network_name: ''
            initiator: ''
            ports: {}
            rate_limiting: none
            idempotent: false
    registy:
      type: cna.qualityModel.entities.BackingService
      metadata:
        label: Registy
        fontSize: '14'
        size_width: '300'
        size_height: '180'
        position_xCoord: '1070'
        position_yCoord: '10'
      properties:
        managed: ''
        software_type: custom
        stateless: true
        artifact: jar
        load_shedding: false
        assigned_networks:
          - teastore-network
        component_version: ''
        admin_credential: ''
        providedFunctionality: ''
      requirements:
        - provides_endpoint:
            capability: tosca.capabilities.Endpoint
            node: add_service_location
            relationship:
              type: cna.qualityModel.relationships.Provides.Endpoint
        - provides_endpoint:
            capability: tosca.capabilities.Endpoint
            node: remove_service_location
            relationship:
              type: cna.qualityModel.relationships.Provides.Endpoint
        - provides_endpoint:
            capability: tosca.capabilities.Endpoint
            node: getinstances
            relationship:
              type: cna.qualityModel.relationships.Provides.Endpoint
        - host:
            node: aws_elastic_beanstalk
            relationship: aws_elastic_beanstalk_hosts_registy
    sql:
      type: cna.qualityModel.entities.Endpoint
      metadata:
        label: Sql
        fontSize: '11'
        size_width: '60'
        size_height: '60'
        position_xCoord: '1410'
        position_yCoord: '760'
      capabilities:
        endpoint:
          properties:
            protocol: ''
            port: ''
            secure: false
            url_path: ''
            port_name: ''
            network_name: ''
            initiator: ''
            ports: {}
            rate_limiting: none
            idempotent: false
      requirements:
        - uses_data: order
        - uses_data: product
        - uses_data: user
    db:
      type: cna.qualityModel.entities.StorageBackingService
      metadata:
        label: DB
        fontSize: '14'
        size_width: '310'
        size_height: '272.5'
        position_xCoord: '1380'
        position_yCoord: '700'
      properties:
        managed: false
        software_type: custom
        stateless: false
        artifact: RDS Instance
        load_shedding: false
        assigned_networks:
          - teastore-network
        component_version: ''
        admin_credential: ''
        name: ''
        shards: 1
      requirements:
        - provides_endpoint:
            capability: tosca.capabilities.Endpoint
            node: sql
            relationship:
              type: cna.qualityModel.relationships.Provides.Endpoint
        - uses_data:
            node: order
            relationship: db_uses_order
        - uses_data:
            node: user
            relationship: db_uses_user
        - uses_data:
            node: product
            relationship: db_uses_product
        - host:
            node: aws_rds
            relationship: aws_rds_hosts_db
    getentities:
      type: cna.qualityModel.entities.Endpoint
      metadata:
        label: Getentities
        fontSize: '11'
        size_width: '60'
        size_height: '60'
        position_xCoord: '1330'
        position_yCoord: '280'
      capabilities:
        endpoint:
          properties:
            protocol: HTTP GET
            port: ''
            secure: false
            url_path: ''
            port_name: ''
            network_name: ''
            initiator: ''
            ports: {}
            rate_limiting: none
            idempotent: false
      requirements:
        - uses_data: order
        - uses_data: product
        - uses_data: user
    getentity:
      type: cna.qualityModel.entities.Endpoint
      metadata:
        label: Getentity
        fontSize: '11'
        size_width: '60'
        size_height: '60'
        position_xCoord: '1310'
        position_yCoord: '340'
      capabilities:
        endpoint:
          properties:
            protocol: ''
            port: ''
            secure: false
            url_path: ''
            port_name: ''
            network_name: ''
            initiator: ''
            ports: {}
            rate_limiting: none
            idempotent: false
      requirements:
        - uses_data: order
        - uses_data: product
        - uses_data: user
    generatedb:
      type: cna.qualityModel.entities.Endpoint
      metadata:
        label: Generatedb
        fontSize: '11'
        size_width: '60'
        size_height: '60'
        position_xCoord: '1310'
        position_yCoord: '510'
      capabilities:
        endpoint:
          properties:
            protocol: ''
            port: ''
            secure: false
            url_path: ''
            port_name: ''
            network_name: ''
            initiator: ''
            ports: {}
            rate_limiting: none
            idempotent: false
      requirements:
        - uses_data: order
        - uses_data: product
        - uses_data: user
    createentity:
      type: cna.qualityModel.entities.Endpoint
      metadata:
        label: Createentity
        fontSize: '11'
        size_width: '60'
        size_height: '60'
        position_xCoord: '1260'
        position_yCoord: '420'
      capabilities:
        endpoint:
          properties:
            protocol: HTTP POST
            port: ''
            secure: false
            url_path: ''
            port_name: ''
            network_name: ''
            initiator: ''
            ports: {}
            rate_limiting: none
            idempotent: false
      requirements:
        - uses_data: order
        - uses_data: product
        - uses_data: user
    persistence:
      type: cna.qualityModel.entities.Service
      metadata:
        label: Persistence
        fontSize: '14'
        size_width: '410'
        size_height: '352.86'
        position_xCoord: '1220'
        position_yCoord: '270'
      properties:
        managed: ''
        software_type: custom
        stateless: true
        artifact: jar
        load_shedding: false
        assigned_networks:
          - teastore-network
        component_version: ''
        admin_credential: ''
      requirements:
        - provides_endpoint:
            capability: tosca.capabilities.Endpoint
            node: getentities
            relationship:
              type: cna.qualityModel.relationships.Provides.Endpoint
        - provides_endpoint:
            capability: tosca.capabilities.Endpoint
            node: getentity
            relationship:
              type: cna.qualityModel.relationships.Provides.Endpoint
        - provides_endpoint:
            capability: tosca.capabilities.Endpoint
            node: generatedb
            relationship:
              type: cna.qualityModel.relationships.Provides.Endpoint
        - provides_endpoint:
            capability: tosca.capabilities.Endpoint
            node: createentity
            relationship:
              type: cna.qualityModel.relationships.Provides.Endpoint
        - uses_data:
            node: order
            relationship: persistence_uses_order
        - uses_data:
            node: product
            relationship: persistence_uses_product
        - uses_data:
            node: user
            relationship: persistence_uses_user
        - host:
            node: aws_elastic_beanstalk
            relationship: aws_elastic_beanstalk_hosts_persistence
        - endpoint_link:
            node: sql
            relationship: persistence_linksTo_sql
        - endpoint_link:
            node: remove_service_location
            relationship: persistence_linksTo_remove_service_location
        - endpoint_link:
            node: add_service_location
            relationship: persistence_linksTo_add_service_location
    recommendsingle:
      type: cna.qualityModel.entities.Endpoint
      metadata:
        label: Recommendsingle
        fontSize: '11'
        size_width: '60'
        size_height: '60'
        position_xCoord: '1050'
        position_yCoord: '810'
      capabilities:
        endpoint:
          properties:
            protocol: HTTP POST
            port: ''
            secure: false
            url_path: /recommendsingle
            port_name: ''
            network_name: ''
            initiator: ''
            ports: {}
            rate_limiting: none
            idempotent: false
    recommend:
      type: cna.qualityModel.entities.Endpoint
      metadata:
        label: Recommend
        fontSize: '11'
        size_width: '60'
        size_height: '60'
        position_xCoord: '960'
        position_yCoord: '830'
      capabilities:
        endpoint:
          properties:
            protocol: HTTP POST
            port: ''
            secure: false
            url_path: /recommend
            port_name: ''
            network_name: ''
            initiator: ''
            ports: {}
            rate_limiting: none
            idempotent: false
    timestamp:
      type: cna.qualityModel.entities.Endpoint
      metadata:
        label: Timestamp
        fontSize: '11'
        size_width: '60'
        size_height: '60'
        position_xCoord: '1100'
        position_yCoord: '860'
      capabilities:
        endpoint:
          properties:
            protocol: HTTP GET
            port: ''
            secure: false
            url_path: /train/timestamp
            port_name: ''
            network_name: ''
            initiator: ''
            ports: {}
            rate_limiting: none
            idempotent: false
    train:
      type: cna.qualityModel.entities.Endpoint
      metadata:
        label: Train
        fontSize: '11'
        size_width: '60'
        size_height: '60'
        position_xCoord: '990'
        position_yCoord: '900'
      capabilities:
        endpoint:
          properties:
            protocol: HTTP GET
            port: ''
            secure: false
            url_path: /train
            port_name: ''
            network_name: ''
            initiator: ''
            ports: {}
            rate_limiting: none
            idempotent: false
    isready_a:
      type: cna.qualityModel.entities.Endpoint
      metadata:
        label: Isready A
        fontSize: '11'
        size_width: '60'
        size_height: '60'
        position_xCoord: '1070'
        position_yCoord: '910'
      capabilities:
        endpoint:
          properties:
            protocol: HTTP GET
            port: ''
            secure: false
            url_path: /train/isready
            port_name: ''
            network_name: ''
            initiator: ''
            ports: {}
            rate_limiting: none
            idempotent: false
    recommender:
      type: cna.qualityModel.entities.Service
      metadata:
        label: Recommender
        fontSize: '14'
        size_width: '360'
        size_height: '308.57'
        position_xCoord: '890'
        position_yCoord: '727.86'
      properties:
        managed: ''
        software_type: custom
        stateless: true
        artifact: jar
        load_shedding: false
        assigned_networks:
          - teastore-network
        component_version: ''
        admin_credential: ''
      requirements:
        - provides_endpoint:
            capability: tosca.capabilities.Endpoint
            node: recommendsingle
            relationship:
              type: cna.qualityModel.relationships.Provides.Endpoint
        - provides_endpoint:
            capability: tosca.capabilities.Endpoint
            node: recommend
            relationship:
              type: cna.qualityModel.relationships.Provides.Endpoint
        - provides_endpoint:
            capability: tosca.capabilities.Endpoint
            node: timestamp
            relationship:
              type: cna.qualityModel.relationships.Provides.Endpoint
        - provides_endpoint:
            capability: tosca.capabilities.Endpoint
            node: train
            relationship:
              type: cna.qualityModel.relationships.Provides.Endpoint
        - provides_endpoint:
            capability: tosca.capabilities.Endpoint
            node: isready_a
            relationship:
              type: cna.qualityModel.relationships.Provides.Endpoint
        - host:
            node: aws_elastic_beanstalk
            relationship: aws_elastic_beanstalk_hosts_recommender
        - endpoint_link:
            node: remove_service_location
            relationship: recommender_linksTo_remove_service_location
        - endpoint_link:
            node: add_service_location
            relationship: recommender_linksTo_add_service_location
        - endpoint_link:
            node: generatedb
            relationship: recommender_linksTo_generatedb
        - endpoint_link:
            node: getentities
            relationship: recommender_linksTo_getentities
    regenerateimages:
      type: cna.qualityModel.entities.Endpoint
      metadata:
        label: Regenerateimages
        fontSize: '11'
        size_width: '50'
        size_height: '50'
        position_xCoord: '960'
        position_yCoord: '470'
      capabilities:
        endpoint:
          properties:
            protocol: HTTP GET
            port: ''
            secure: false
            url_path: /image/regenerateImages
            port_name: ''
            network_name: ''
            initiator: ''
            ports: {}
            rate_limiting: none
            idempotent: false
      requirements:
        - uses_data: image
    getproductimages:
      type: cna.qualityModel.entities.Endpoint
      metadata:
        label: Getproductimages
        fontSize: '11'
        size_width: '50'
        size_height: '50'
        position_xCoord: '880'
        position_yCoord: '460'
      capabilities:
        endpoint:
          properties:
            protocol: HTTP POST
            port: ''
            secure: false
            url_path: /image/getProductImages
            port_name: ''
            network_name: ''
            initiator: ''
            ports: {}
            rate_limiting: none
            idempotent: false
      requirements:
        - uses_data: image
    getwebimages:
      type: cna.qualityModel.entities.Endpoint
      metadata:
        label: Getwebimages
        fontSize: '11'
        size_width: '50'
        size_height: '50'
        position_xCoord: '810'
        position_yCoord: '500'
      capabilities:
        endpoint:
          properties:
            protocol: HTTP POST
            port: ''
            secure: false
            url_path: image/getWebImages
            port_name: ''
            network_name: ''
            initiator: ''
            ports: {}
            rate_limiting: none
            idempotent: false
      requirements:
        - uses_data: image
    finished:
      type: cna.qualityModel.entities.Endpoint
      metadata:
        label: Finished
        fontSize: '11'
        size_width: '50'
        size_height: '50'
        position_xCoord: '860'
        position_yCoord: '540'
      capabilities:
        endpoint:
          properties:
            protocol: HTTP GET
            port: ''
            secure: false
            url_path: /image/finished
            port_name: ''
            network_name: ''
            initiator: ''
            ports: {}
            rate_limiting: none
            idempotent: false
    setcachesize:
      type: cna.qualityModel.entities.Endpoint
      metadata:
        label: Setcachesize
        fontSize: '11'
        size_width: '50'
        size_height: '50'
        position_xCoord: '990'
        position_yCoord: '540'
      capabilities:
        endpoint:
          properties:
            protocol: HTTP POST
            port: ''
            secure: false
            url_path: /image/setCacheSize
            port_name: ''
            network_name: ''
            initiator: ''
            ports: {}
            rate_limiting: none
            idempotent: false
    state:
      type: cna.qualityModel.entities.Endpoint
      metadata:
        label: State
        fontSize: '11'
        size_width: '50'
        size_height: '50'
        position_xCoord: '920'
        position_yCoord: '530'
      capabilities:
        endpoint:
          properties:
            protocol: HTTP GET
            port: ''
            secure: false
            url_path: /image/state
            port_name: ''
            network_name: ''
            initiator: ''
            ports: {}
            rate_limiting: none
            idempotent: false
    imageprovider:
      type: cna.qualityModel.entities.Service
      metadata:
        label: Imageprovider
        fontSize: '14'
        size_width: '400'
        size_height: '342.86'
        position_xCoord: '740'
        position_yCoord: '367.14'
      properties:
        managed: ''
        software_type: custom
        stateless: true
        artifact: jar
        load_shedding: false
        assigned_networks:
          - teastore-network
        component_version: ''
        admin_credential: ''
      requirements:
        - provides_endpoint:
            capability: tosca.capabilities.Endpoint
            node: regenerateimages
            relationship:
              type: cna.qualityModel.relationships.Provides.Endpoint
        - provides_endpoint:
            capability: tosca.capabilities.Endpoint
            node: getproductimages
            relationship:
              type: cna.qualityModel.relationships.Provides.Endpoint
        - provides_endpoint:
            capability: tosca.capabilities.Endpoint
            node: getwebimages
            relationship:
              type: cna.qualityModel.relationships.Provides.Endpoint
        - provides_endpoint:
            capability: tosca.capabilities.Endpoint
            node: finished
            relationship:
              type: cna.qualityModel.relationships.Provides.Endpoint
        - provides_endpoint:
            capability: tosca.capabilities.Endpoint
            node: setcachesize
            relationship:
              type: cna.qualityModel.relationships.Provides.Endpoint
        - provides_endpoint:
            capability: tosca.capabilities.Endpoint
            node: state
            relationship:
              type: cna.qualityModel.relationships.Provides.Endpoint
        - uses_data:
            node: image
            relationship: imageprovider_uses_image
        - host:
            node: aws_elastic_beanstalk
            relationship: aws_elastic_beanstalk_hosts_imageprovider
        - endpoint_link:
            node: getentities
            relationship: imageprovider_linksTo_getentities
        - endpoint_link:
            node: generatedb
            relationship: imageprovider_linksTo_generatedb
        - endpoint_link:
            node: add_service_location
            relationship: imageprovider_linksTo_add_service_location
        - endpoint_link:
            node: remove_service_location
            relationship: imageprovider_linksTo_remove_service_location
    add:
      type: cna.qualityModel.entities.Endpoint
      metadata:
        label: Add
        fontSize: '11'
        size_width: '50'
        size_height: '50'
        position_xCoord: '530'
        position_yCoord: '660'
      capabilities:
        endpoint:
          properties:
            protocol: HTTP POST
            port: ''
            secure: false
            url_path: /cart/add/{pid}
            port_name: ''
            network_name: ''
            initiator: ''
            ports: {}
            rate_limiting: none
            idempotent: false
      requirements:
        - uses_data: product
        - uses_data: user
    isloggedin:
      type: cna.qualityModel.entities.Endpoint
      metadata:
        label: Isloggedin
        fontSize: '11'
        size_width: '50'
        size_height: '50'
        position_xCoord: '360'
        position_yCoord: '890'
      capabilities:
        endpoint:
          properties:
            protocol: HTTP POST
            port: ''
            secure: false
            url_path: /useractions/isloggedin
            port_name: ''
            network_name: ''
            initiator: ''
            ports: {}
            rate_limiting: none
            idempotent: false
      requirements:
        - uses_data: user
    login:
      type: cna.qualityModel.entities.Endpoint
      metadata:
        label: Login
        fontSize: '11'
        size_width: '50'
        size_height: '50'
        position_xCoord: '330'
        position_yCoord: '830'
      capabilities:
        endpoint:
          properties:
            protocol: ''
            port: ''
            secure: false
            url_path: /useractions/login
            port_name: ''
            network_name: ''
            initiator: ''
            ports: {}
            rate_limiting: none
            idempotent: false
      requirements:
        - uses_data: user
    logout:
      type: cna.qualityModel.entities.Endpoint
      metadata:
        label: Logout
        fontSize: '11'
        size_width: '50'
        size_height: '50'
        position_xCoord: '300'
        position_yCoord: '780'
      capabilities:
        endpoint:
          properties:
            protocol: HTTP POST
            port: ''
            secure: false
            url_path: /useractions/logout
            port_name: ''
            network_name: ''
            initiator: ''
            ports: {}
            rate_limiting: none
            idempotent: false
      requirements:
        - uses_data: user
    placeorder:
      type: cna.qualityModel.entities.Endpoint
      metadata:
        label: Placeorder
        fontSize: '11'
        size_width: '50'
        size_height: '50'
        position_xCoord: '560'
        position_yCoord: '720'
      capabilities:
        endpoint:
          properties:
            protocol: HTTP POST
            port: ''
            secure: false
            url_path: /useractions/placeorder
            port_name: ''
            network_name: ''
            initiator: ''
            ports: {}
            rate_limiting: none
            idempotent: false
      requirements:
        - uses_data: order
    remove:
      type: cna.qualityModel.entities.Endpoint
      metadata:
        label: Remove
        fontSize: '11'
        size_width: '50'
        size_height: '50'
        position_xCoord: '490'
        position_yCoord: '710'
      capabilities:
        endpoint:
          properties:
            protocol: HTTP POST
            port: ''
            secure: false
            url_path: /cart/remove/{pid}
            port_name: ''
            network_name: ''
            initiator: ''
            ports: {}
            rate_limiting: none
            idempotent: false
    updatequantity:
      type: cna.qualityModel.entities.Endpoint
      metadata:
        label: Updatequantity
        fontSize: '11'
        size_width: '50'
        size_height: '50'
        position_xCoord: '430'
        position_yCoord: '710'
      capabilities:
        endpoint:
          properties:
            protocol: HTTP PUT
            port: ''
            secure: false
            url_path: /cart/{pid}
            port_name: ''
            network_name: ''
            initiator: ''
            ports: {}
            rate_limiting: none
            idempotent: false
      requirements:
        - uses_data: product
        - uses_data: user
    isready:
      type: cna.qualityModel.entities.Endpoint
      metadata:
        label: Isready
        fontSize: '11'
        size_width: '50'
        size_height: '50'
        position_xCoord: '360'
        position_yCoord: '710'
      capabilities:
        endpoint:
          properties:
            protocol: HTTP GET
            port: ''
            secure: false
            url_path: ready/isready
            port_name: ''
            network_name: ''
            initiator: ''
            ports: {}
            rate_limiting: none
            idempotent: false
    auth:
      type: cna.qualityModel.entities.Service
      metadata:
        label: Auth
        fontSize: '14'
        size_width: '400'
        size_height: '342.86'
        position_xCoord: '280'
        position_yCoord: '650'
      properties:
        managed: ''
        software_type: custom
        stateless: true
        artifact: jar
        load_shedding: false
        assigned_networks:
          - teastore-network
        component_version: ''
        admin_credential: ''
      requirements:
        - provides_endpoint:
            capability: tosca.capabilities.Endpoint
            node: add
            relationship:
              type: cna.qualityModel.relationships.Provides.Endpoint
        - provides_endpoint:
            capability: tosca.capabilities.Endpoint
            node: isloggedin
            relationship:
              type: cna.qualityModel.relationships.Provides.Endpoint
        - provides_endpoint:
            capability: tosca.capabilities.Endpoint
            node: login
            relationship:
              type: cna.qualityModel.relationships.Provides.Endpoint
        - provides_endpoint:
            capability: tosca.capabilities.Endpoint
            node: logout
            relationship:
              type: cna.qualityModel.relationships.Provides.Endpoint
        - provides_endpoint:
            capability: tosca.capabilities.Endpoint
            node: placeorder
            relationship:
              type: cna.qualityModel.relationships.Provides.Endpoint
        - provides_endpoint:
            capability: tosca.capabilities.Endpoint
            node: remove
            relationship:
              type: cna.qualityModel.relationships.Provides.Endpoint
        - provides_endpoint:
            capability: tosca.capabilities.Endpoint
            node: updatequantity
            relationship:
              type: cna.qualityModel.relationships.Provides.Endpoint
        - provides_endpoint:
            capability: tosca.capabilities.Endpoint
            node: isready
            relationship:
              type: cna.qualityModel.relationships.Provides.Endpoint
        - uses_data:
            node: user
            relationship: auth_uses_user
        - uses_data:
            node: order
            relationship: auth_uses_order
        - uses_data:
            node: product
            relationship: auth_uses_product
        - host:
            node: aws_elastic_beanstalk
            relationship: aws_elastic_beanstalk_hosts_auth
        - endpoint_link:
            node: getentity
            relationship: auth_linksTo_getentity
        - endpoint_link:
            node: createentity
            relationship: auth_linksTo_createentity
    isready_b:
      type: cna.qualityModel.entities.Endpoint
      metadata:
        label: Isready B
        fontSize: '11'
        size_width: '50'
        size_height: '50'
        position_xCoord: '270'
        position_yCoord: '192.85999999999999'
      capabilities:
        endpoint:
          properties:
            protocol: HTTP GET
            port: ''
            secure: false
            url_path: /ready/isready
            port_name: ''
            network_name: ''
            initiator: ''
            ports: {}
            rate_limiting: none
            idempotent: false
    index:
      type: cna.qualityModel.entities.Endpoint.External
      metadata:
        label: Index
        fontSize: '11'
        size_width: '50'
        size_height: '50'
        position_xCoord: '280'
        position_yCoord: '62.859999999999985'
      capabilities:
        external_endpoint:
          properties:
            protocol: HTTP GET
            port: ''
            secure: false
            url_path: /index
            port_name: ''
            network_name: ''
            initiator: ''
            ports: {}
            rate_limiting: none
            idempotent: false
            floating: false
            dns_name: ''
    add_to_cart:
      type: cna.qualityModel.entities.Endpoint.External
      metadata:
        label: Add To Cart
        fontSize: '11'
        size_width: '50'
        size_height: '50'
        position_xCoord: '210'
        position_yCoord: '262.86'
      capabilities:
        external_endpoint:
          properties:
            protocol: HTTP POST
            port: ''
            secure: false
            url_path: /cartAction/addToCart
            port_name: ''
            network_name: ''
            initiator: ''
            ports: {}
            rate_limiting: none
            idempotent: false
            floating: false
            dns_name: ''
      requirements:
        - uses_data: user
    about_us:
      type: cna.qualityModel.entities.Endpoint.External
      metadata:
        label: About Us
        fontSize: '11'
        size_width: '50'
        size_height: '50'
        position_xCoord: '200'
        position_yCoord: '202.85999999999999'
      capabilities:
        external_endpoint:
          properties:
            protocol: HTTP GET
            port: ''
            secure: false
            url_path: /about
            port_name: ''
            network_name: ''
            initiator: ''
            ports: {}
            rate_limiting: none
            idempotent: false
            floating: false
            dns_name: ''
    remove_from_cart:
      type: cna.qualityModel.entities.Endpoint.External
      metadata:
        label: Remove From Cart
        fontSize: '11'
        size_width: '50'
        size_height: '50'
        position_xCoord: '240'
        position_yCoord: '312.86'
      capabilities:
        external_endpoint:
          properties:
            protocol: HTTP POST
            port: ''
            secure: false
            url_path: /cartAction/remove
            port_name: ''
            network_name: ''
            initiator: ''
            ports: {}
            rate_limiting: none
            idempotent: false
            floating: false
            dns_name: ''
      requirements:
        - uses_data: user
    update_quantity:
      type: cna.qualityModel.entities.Endpoint.External
      metadata:
        label: Update Quantity
        fontSize: '11'
        size_width: '50'
        size_height: '50'
        position_xCoord: '270'
        position_yCoord: '362.86'
      capabilities:
        external_endpoint:
          properties:
            protocol: HTTP POST
            port: ''
            secure: false
            url_path: /cartAction/updateCartQuantities
            port_name: ''
            network_name: ''
            initiator: ''
            ports: {}
            rate_limiting: none
            idempotent: false
            floating: false
            dns_name: ''
      requirements:
        - uses_data: user
    confirm_order:
      type: cna.qualityModel.entities.Endpoint.External
      metadata:
        label: Confirm Order
        fontSize: '11'
        size_width: '50'
        size_height: '50'
        position_xCoord: '340'
        position_yCoord: '392.86'
      capabilities:
        external_endpoint:
          properties:
            protocol: HTTP POST
            port: ''
            secure: false
            url_path: /cartAction/confirm
            port_name: ''
            network_name: ''
            initiator: ''
            ports: {}
            rate_limiting: none
            idempotent: false
            floating: false
            dns_name: ''
      requirements:
        - uses_data: order
    proceed_to_checkout:
      type: cna.qualityModel.entities.Endpoint.External
      metadata:
        label: Proceed To Checkout
        fontSize: '11'
        size_width: '50'
        size_height: '50'
        position_xCoord: '400'
        position_yCoord: '392.86'
      capabilities:
        external_endpoint:
          properties:
            protocol: HTTP POST
            port: ''
            secure: false
            url_path: /cartAction/proceedToCheckout
            port_name: ''
            network_name: ''
            initiator: ''
            ports: {}
            rate_limiting: none
            idempotent: false
            floating: false
            dns_name: ''
      requirements:
        - uses_data: order
        - uses_data: user
    show_order:
      type: cna.qualityModel.entities.Endpoint.External
      metadata:
        label: Show Order
        fontSize: '11'
        size_width: '50'
        size_height: '50'
        position_xCoord: '460'
        position_yCoord: '392.86'
      capabilities:
        external_endpoint:
          properties:
            protocol: HTTP GET
            port: ''
            secure: false
            url_path: /order
            port_name: ''
            network_name: ''
            initiator: ''
            ports: {}
            rate_limiting: none
            idempotent: false
            floating: false
            dns_name: ''
      requirements:
        - uses_data: order
    get_cart:
      type: cna.qualityModel.entities.Endpoint.External
      metadata:
        label: Get Cart
        fontSize: '11'
        size_width: '50'
        size_height: '50'
        position_xCoord: '590'
        position_yCoord: '232.85999999999999'
      capabilities:
        external_endpoint:
          properties:
            protocol: HTTP GET
            port: ''
            secure: false
            url_path: /cart
            port_name: ''
            network_name: ''
            initiator: ''
            ports: {}
            rate_limiting: none
            idempotent: false
            floating: false
            dns_name: ''
      requirements:
        - uses_data: user
    show_database:
      type: cna.qualityModel.entities.Endpoint.External
      metadata:
        label: Show Database
        fontSize: '11'
        size_width: '50'
        size_height: '50'
        position_xCoord: '560'
        position_yCoord: '292.86'
      capabilities:
        external_endpoint:
          properties:
            protocol: HTTP GET
            port: ''
            secure: false
            url_path: /database
            port_name: ''
            network_name: ''
            initiator: ''
            ports: {}
            rate_limiting: none
            idempotent: false
            floating: false
            dns_name: ''
      requirements:
        - uses_data: image
        - uses_data: order
        - uses_data: product
        - uses_data: user
    system_status:
      type: cna.qualityModel.entities.Endpoint.External
      metadata:
        label: System Status
        fontSize: '11'
        size_width: '50'
        size_height: '50'
        position_xCoord: '510'
        position_yCoord: '352.86'
      capabilities:
        external_endpoint:
          properties:
            protocol: HTTP GET
            port: ''
            secure: false
            url_path: /status
            port_name: ''
            network_name: ''
            initiator: ''
            ports: {}
            rate_limiting: none
            idempotent: false
            floating: false
            dns_name: ''
    setup_database:
      type: cna.qualityModel.entities.Endpoint.External
      metadata:
        label: Setup Database
        fontSize: '11'
        size_width: '50'
        size_height: '50'
        position_xCoord: '560'
        position_yCoord: '172.85999999999999'
      capabilities:
        external_endpoint:
          properties:
            protocol: HTTP POST
            port: ''
            secure: false
            url_path: /dataBaseAction/confirm
            port_name: ''
            network_name: ''
            initiator: ''
            ports: {}
            rate_limiting: none
            idempotent: false
            floating: false
            dns_name: ''
      requirements:
        - uses_data: image
        - uses_data: order
        - uses_data: product
        - uses_data: user
    login_a:
      type: cna.qualityModel.entities.Endpoint.External
      metadata:
        label: Login A
        fontSize: '11'
        size_width: '50'
        size_height: '50'
        position_xCoord: '490'
        position_yCoord: '62.859999999999985'
      capabilities:
        external_endpoint:
          properties:
            protocol: HTTP POST
            port: ''
            secure: false
            url_path: /loginAction
            port_name: ''
            network_name: ''
            initiator: ''
            ports: {}
            rate_limiting: none
            idempotent: false
            floating: false
            dns_name: ''
      requirements:
        - uses_data: user
    show_product:
      type: cna.qualityModel.entities.Endpoint.External
      metadata:
        label: Show Product
        fontSize: '11'
        size_width: '50'
        size_height: '50'
        position_xCoord: '340'
        position_yCoord: '62.859999999999985'
      capabilities:
        external_endpoint:
          properties:
            protocol: HTTP GET
            port: ''
            secure: false
            url_path: /product
            port_name: ''
            network_name: ''
            initiator: ''
            ports: {}
            rate_limiting: none
            idempotent: false
            floating: false
            dns_name: ''
      requirements:
        - uses_data: image
        - uses_data: product
    get_categories:
      type: cna.qualityModel.entities.Endpoint.External
      metadata:
        label: Get Categories
        fontSize: '11'
        size_width: '50'
        size_height: '50'
        position_xCoord: '290'
        position_yCoord: '122.85999999999999'
      capabilities:
        external_endpoint:
          properties:
            protocol: HTTP GET
            port: ''
            secure: false
            url_path: /category
            port_name: ''
            network_name: ''
            initiator: ''
            ports: {}
            rate_limiting: none
            idempotent: false
            floating: false
            dns_name: ''
      requirements:
        - uses_data: product
    show_profile:
      type: cna.qualityModel.entities.Endpoint.External
      metadata:
        label: Show Profile
        fontSize: '11'
        size_width: '50'
        size_height: '50'
        position_xCoord: '520'
        position_yCoord: '120'
      capabilities:
        external_endpoint:
          properties:
            protocol: HTTP GET
            port: ''
            secure: false
            url_path: /profile
            port_name: ''
            network_name: ''
            initiator: ''
            ports: {}
            rate_limiting: none
            idempotent: false
            floating: false
            dns_name: ''
      requirements:
        - uses_data: image
        - uses_data: user
    webui:
      type: cna.qualityModel.entities.Service
      metadata:
        label: Webui
        fontSize: '14'
        size_width: '600'
        size_height: '514.29'
        position_xCoord: '120'
        position_yCoord: '10'
      properties:
        managed: ''
        software_type: custom
        stateless: true
        artifact: jar
        load_shedding: false
        assigned_networks:
          - teastore-network
        component_version: ''
        admin_credential: ''
      requirements:
        - provides_endpoint:
            capability: tosca.capabilities.Endpoint
            node: isready_b
            relationship:
              type: cna.qualityModel.relationships.Provides.Endpoint
        - provides_external_endpoint:
            capability: tosca.capabilities.Endpoint.Public
            node: index
            relationship:
              type: cna.qualityModel.relationships.Provides.Endpoint
        - provides_external_endpoint:
            capability: tosca.capabilities.Endpoint.Public
            node: add_to_cart
            relationship:
              type: cna.qualityModel.relationships.Provides.Endpoint
        - provides_external_endpoint:
            capability: tosca.capabilities.Endpoint.Public
            node: about_us
            relationship:
              type: cna.qualityModel.relationships.Provides.Endpoint
        - provides_external_endpoint:
            capability: tosca.capabilities.Endpoint.Public
            node: remove_from_cart
            relationship:
              type: cna.qualityModel.relationships.Provides.Endpoint
        - provides_external_endpoint:
            capability: tosca.capabilities.Endpoint.Public
            node: update_quantity
            relationship:
              type: cna.qualityModel.relationships.Provides.Endpoint
        - provides_external_endpoint:
            capability: tosca.capabilities.Endpoint.Public
            node: confirm_order
            relationship:
              type: cna.qualityModel.relationships.Provides.Endpoint
        - provides_external_endpoint:
            capability: tosca.capabilities.Endpoint.Public
            node: proceed_to_checkout
            relationship:
              type: cna.qualityModel.relationships.Provides.Endpoint
        - provides_external_endpoint:
            capability: tosca.capabilities.Endpoint.Public
            node: show_order
            relationship:
              type: cna.qualityModel.relationships.Provides.Endpoint
        - provides_external_endpoint:
            capability: tosca.capabilities.Endpoint.Public
            node: get_cart
            relationship:
              type: cna.qualityModel.relationships.Provides.Endpoint
        - provides_external_endpoint:
            capability: tosca.capabilities.Endpoint.Public
            node: show_database
            relationship:
              type: cna.qualityModel.relationships.Provides.Endpoint
        - provides_external_endpoint:
            capability: tosca.capabilities.Endpoint.Public
            node: system_status
            relationship:
              type: cna.qualityModel.relationships.Provides.Endpoint
        - provides_external_endpoint:
            capability: tosca.capabilities.Endpoint.Public
            node: setup_database
            relationship:
              type: cna.qualityModel.relationships.Provides.Endpoint
        - provides_external_endpoint:
            capability: tosca.capabilities.Endpoint.Public
            node: login_a
            relationship:
              type: cna.qualityModel.relationships.Provides.Endpoint
        - provides_external_endpoint:
            capability: tosca.capabilities.Endpoint.Public
            node: show_product
            relationship:
              type: cna.qualityModel.relationships.Provides.Endpoint
        - provides_external_endpoint:
            capability: tosca.capabilities.Endpoint.Public
            node: get_categories
            relationship:
              type: cna.qualityModel.relationships.Provides.Endpoint
        - provides_external_endpoint:
            capability: tosca.capabilities.Endpoint.Public
            node: show_profile
            relationship:
              type: cna.qualityModel.relationships.Provides.Endpoint
        - uses_data:
            node: user
            relationship: webui_uses_user
        - uses_data:
            node: image
            relationship: webui_uses_image
        - uses_data:
            node: product
            relationship: webui_uses_product
        - uses_data:
            node: order
            relationship: webui_uses_order
        - host:
            node: aws_elastic_beanstalk
            relationship: aws_elastic_beanstalk_hosts_webui
        - endpoint_link:
            node: updatequantity
            relationship: webui_linksTo_updatequantity
        - endpoint_link:
            node: remove
            relationship: webui_linksTo_remove
        - endpoint_link:
            node: placeorder
            relationship: webui_linksTo_placeorder
        - endpoint_link:
            node: logout
            relationship: webui_linksTo_logout
        - endpoint_link:
            node: login
            relationship: webui_linksTo_login
        - endpoint_link:
            node: isloggedin
            relationship: webui_linksTo_isloggedin
        - endpoint_link:
            node: add
            relationship: webui_linksTo_add
        - endpoint_link:
            node: finished
            relationship: webui_linksTo_finished
        - endpoint_link:
            node: getwebimages
            relationship: webui_linksTo_getwebimages
        - endpoint_link:
            node: getproductimages
            relationship: webui_linksTo_getproductimages
        - endpoint_link:
            node: regenerateimages
            relationship: webui_linksTo_regenerateimages
        - endpoint_link:
            node: getinstances
            relationship: webui_linksTo_getinstances
        - endpoint_link:
            node: generatedb
            relationship: webui_linksTo_generatedb
        - endpoint_link:
            node: getentity
            relationship: webui_linksTo_getentity
        - endpoint_link:
            node: getentities
            relationship: webui_linksTo_getentities
        - endpoint_link:
            node: train
            relationship: webui_linksTo_train
        - endpoint_link:
            node: recommend
            relationship: webui_linksTo_recommend
    index_page:
      type: cna.qualityModel.entities.RequestTrace
      metadata:
        label: Index Page
        fontSize: '14'
        size_width: '200'
        size_height: '86'
        position_xCoord: '1970'
        position_yCoord: '50'
      properties:
        referred_endpoint: index
        nodes:
          - persistence
          - webui
        involved_links:
          - persistence_linksTo_sql
          - webui_linksTo_isloggedin
          - webui_linksTo_getentities
          - webui_linksTo_getwebimages
    user_login:
      type: cna.qualityModel.entities.RequestTrace
      metadata:
        label: User Login
        fontSize: '14'
        size_width: '200'
        size_height: '86'
        position_xCoord: '1970'
        position_yCoord: '150'
      properties:
        referred_endpoint: login_a
        nodes:
          - webui
        involved_links:
          - webui_linksTo_login
    user_logout:
      type: cna.qualityModel.entities.RequestTrace
      metadata:
        label: User Logout
        fontSize: '14'
        size_width: '200'
        size_height: '86'
        position_xCoord: '1970'
        position_yCoord: '240'
      properties:
        referred_endpoint: login_a
        nodes:
          - webui
        involved_links:
          - webui_linksTo_logout
    order_page:
      type: cna.qualityModel.entities.RequestTrace
      metadata:
        label: Order Page
        fontSize: '14'
        size_width: '200'
        size_height: '86'
        position_xCoord: '1970'
        position_yCoord: '330'
      properties:
        referred_endpoint: show_order
        nodes:
          - webui
          - persistence
        involved_links:
          - webui_linksTo_isloggedin
          - webui_linksTo_getwebimages
          - webui_linksTo_getentities
          - persistence_linksTo_sql
    product_page:
      type: cna.qualityModel.entities.RequestTrace
      metadata:
        label: Product Page
        fontSize: '14'
        size_width: '200'
        size_height: '86'
        position_xCoord: '1970'
        position_yCoord: '420'
      properties:
        referred_endpoint: show_product
        nodes:
          - persistence
          - webui
        involved_links:
          - persistence_linksTo_sql
          - webui_linksTo_getwebimages
          - webui_linksTo_getproductimages
          - webui_linksTo_isloggedin
          - webui_linksTo_recommend
          - webui_linksTo_getentities
          - webui_linksTo_getentity
    profile_page:
      type: cna.qualityModel.entities.RequestTrace
      metadata:
        label: Profile Page
        fontSize: '14'
        size_width: '200'
        size_height: '86'
        position_xCoord: '1970'
        position_yCoord: '510'
      properties:
        referred_endpoint: show_profile
        nodes:
          - persistence
          - webui
        involved_links:
          - persistence_linksTo_sql
          - webui_linksTo_getwebimages
          - webui_linksTo_isloggedin
          - webui_linksTo_getentities
          - webui_linksTo_getentity
    show_categories:
      type: cna.qualityModel.entities.RequestTrace
      metadata:
        label: Show Categories
        fontSize: '14'
        size_width: '200'
        size_height: '86'
        position_xCoord: '1970'
        position_yCoord: '600'
      properties:
        referred_endpoint: get_categories
        nodes:
          - persistence
          - webui
        involved_links:
          - persistence_linksTo_sql
          - webui_linksTo_getentities
          - webui_linksTo_getentity
    show_cart:
      type: cna.qualityModel.entities.RequestTrace
      metadata:
        label: Show Cart
        fontSize: '14'
        size_width: '200'
        size_height: '86'
        position_xCoord: '1740'
        position_yCoord: '600'
      properties:
        referred_endpoint: get_cart
        nodes:
          - persistence
          - webui
        involved_links:
          - persistence_linksTo_sql
          - webui_linksTo_isloggedin
          - webui_linksTo_getentities
          - webui_linksTo_getentity
          - webui_linksTo_getproductimages
    confirm_order_a:
      type: cna.qualityModel.entities.RequestTrace
      metadata:
        label: Confirm Order A
        fontSize: '14'
        size_width: '200'
        size_height: '86'
        position_xCoord: '1740'
        position_yCoord: '510'
      properties:
        referred_endpoint: confirm_order
        nodes:
          - auth
          - persistence
          - webui
        involved_links:
          - auth_linksTo_createentity
          - persistence_linksTo_sql
          - webui_linksTo_placeorder
    proceed_to_checkout_a:
      type: cna.qualityModel.entities.RequestTrace
      metadata:
        label: Proceed To Checkout A
        fontSize: '14'
        size_width: '200'
        size_height: '86'
        position_xCoord: '1740'
        position_yCoord: '420'
      properties:
        referred_endpoint: proceed_to_checkout
        nodes:
          - webui
        involved_links:
          - webui_linksTo_updatequantity
          - webui_linksTo_isloggedin
    update_cart_quantity:
      type: cna.qualityModel.entities.RequestTrace
      metadata:
        label: Update Cart Quantity
        fontSize: '14'
        size_width: '200'
        size_height: '86'
        position_xCoord: '1740'
        position_yCoord: '330'
      properties:
        referred_endpoint: update_quantity
        nodes:
          - webui
        involved_links:
          - webui_linksTo_updatequantity
    remove_from_cart_a:
      type: cna.qualityModel.entities.RequestTrace
      metadata:
        label: Remove From Cart A
        fontSize: '14'
        size_width: '200'
        size_height: '86'
        position_xCoord: '1740'
        position_yCoord: '240'
      properties:
        referred_endpoint: remove_from_cart
        nodes:
          - webui
        involved_links:
          - webui_linksTo_remove
    add_product_to_cart:
      type: cna.qualityModel.entities.RequestTrace
      metadata:
        label: Add Product To Cart
        fontSize: '14'
        size_width: '200'
        size_height: '86'
        position_xCoord: '1740'
        position_yCoord: '150'
      properties:
        referred_endpoint: add_to_cart
        nodes:
          - auth
          - persistence
          - webui
        involved_links:
          - auth_linksTo_getentity
          - persistence_linksTo_sql
          - webui_linksTo_add
    about_us_a:
      type: cna.qualityModel.entities.RequestTrace
      metadata:
        label: About Us A
        fontSize: '14'
        size_width: '200'
        size_height: '86'
        position_xCoord: '1730'
        position_yCoord: '50'
      properties:
        referred_endpoint: about_us
        nodes:
          - webui
        involved_links:
          - webui_linksTo_getwebimages
          - webui_linksTo_isloggedin
    check_system_status:
      type: cna.qualityModel.entities.RequestTrace
      metadata:
        label: Check System Status
        fontSize: '14'
        size_width: '200'
        size_height: '86'
        position_xCoord: '1970'
        position_yCoord: '760'
      properties:
        referred_endpoint: system_status
        nodes:
          - persistence
          - webui
        involved_links:
          - persistence_linksTo_sql
          - webui_linksTo_generatedb
          - webui_linksTo_getinstances
          - webui_linksTo_getwebimages
          - webui_linksTo_train
          - webui_linksTo_finished
    setup_database_a:
      type: cna.qualityModel.entities.RequestTrace
      metadata:
        label: Setup Database A
        fontSize: '14'
        size_width: '200'
        size_height: '86'
        position_xCoord: '1750'
        position_yCoord: '760'
      properties:
        referred_endpoint: setup_database
        nodes:
          - persistence
          - webui
        involved_links:
          - persistence_linksTo_sql
          - webui_linksTo_train
          - webui_linksTo_generatedb
          - webui_linksTo_regenerateimages
    show_database_actions:
      type: cna.qualityModel.entities.RequestTrace
      metadata:
        label: Show Database Actions
        fontSize: '14'
        size_width: '200'
        size_height: '86'
        position_xCoord: '1750'
        position_yCoord: '870'
      properties:
        referred_endpoint: show_database
        nodes:
          - webui
        involved_links:
          - webui_linksTo_getwebimages
  relationship_templates:
    db_uses_order:
      type: cna.qualityModel.relationships.AttachesTo.DataAggregate
      metadata:
        label: Order
        fontSize: '12'
        size_width: '60'
        size_height: '30'
        position_xCoord: '1530'
        position_yCoord: '880'
      properties:
        usage_relation: persistence
        sharding_level: 1
    db_uses_user:
      type: cna.qualityModel.relationships.AttachesTo.DataAggregate
      metadata:
        label: User
        fontSize: '12'
        size_width: '60'
        size_height: '30'
        position_xCoord: '1530'
        position_yCoord: '760'
      properties:
        usage_relation: persistence
        sharding_level: 1
    db_uses_product:
      type: cna.qualityModel.relationships.AttachesTo.DataAggregate
      metadata:
        label: Product
        fontSize: '12'
        size_width: '60'
        size_height: '30'
        position_xCoord: '1530'
        position_yCoord: '820'
      properties:
        usage_relation: persistence
        sharding_level: 1
    persistence_uses_order:
      type: cna.qualityModel.relationships.AttachesTo.DataAggregate
      metadata:
        label: Order
        fontSize: '12'
        size_width: '60'
        size_height: '30'
        position_xCoord: '1400'
        position_yCoord: '500'
      properties:
        usage_relation: usage
        sharding_level: 0
    persistence_uses_product:
      type: cna.qualityModel.relationships.AttachesTo.DataAggregate
      metadata:
        label: Product
        fontSize: '12'
        size_width: '60'
        size_height: '30'
        position_xCoord: '1400'
        position_yCoord: '440'
      properties:
        usage_relation: usage
        sharding_level: 0
    persistence_uses_user:
      type: cna.qualityModel.relationships.AttachesTo.DataAggregate
      metadata:
        label: User
        fontSize: '12'
        size_width: '60'
        size_height: '30'
        position_xCoord: '1400'
        position_yCoord: '380'
      properties:
        usage_relation: usage
        sharding_level: 0
    imageprovider_uses_image:
      type: cna.qualityModel.relationships.AttachesTo.DataAggregate
      metadata:
        label: Image
        fontSize: '12'
        size_width: '50'
        size_height: '20'
        position_xCoord: '920'
        position_yCoord: '590'
      properties:
        usage_relation: persistence
        sharding_level: 1
    auth_uses_user:
      type: cna.qualityModel.relationships.AttachesTo.DataAggregate
      metadata:
        label: User
        fontSize: '12'
        size_width: '50'
        size_height: '20'
        position_xCoord: '413'
        position_yCoord: '764'
      properties:
        usage_relation: usage
        sharding_level: 0
    auth_uses_order:
      type: cna.qualityModel.relationships.AttachesTo.DataAggregate
      metadata:
        label: Order
        fontSize: '12'
        size_width: '50'
        size_height: '20'
        position_xCoord: '450'
        position_yCoord: '870'
      properties:
        usage_relation: usage
        sharding_level: 0
    auth_uses_product:
      type: cna.qualityModel.relationships.AttachesTo.DataAggregate
      metadata:
        label: Product
        fontSize: '12'
        size_width: '50'
        size_height: '20'
        position_xCoord: '440'
        position_yCoord: '820'
      properties:
        usage_relation: usage
        sharding_level: 0
    webui_uses_user:
      type: cna.qualityModel.relationships.AttachesTo.DataAggregate
      metadata:
        label: User
        fontSize: '12'
        size_width: '50'
        size_height: '20'
        position_xCoord: '330'
        position_yCoord: '192.85999999999999'
      properties:
        usage_relation: usage
        sharding_level: 0
    webui_uses_image:
      type: cna.qualityModel.relationships.AttachesTo.DataAggregate
      metadata:
        label: Image
        fontSize: '12'
        size_width: '50'
        size_height: '20'
        position_xCoord: '440'
        position_yCoord: '192.85999999999999'
      properties:
        usage_relation: usage
        sharding_level: 0
    webui_uses_product:
      type: cna.qualityModel.relationships.AttachesTo.DataAggregate
      metadata:
        label: Product
        fontSize: '12'
        size_width: '50'
        size_height: '20'
        position_xCoord: '330'
        position_yCoord: '252.86'
      properties:
        usage_relation: usage
        sharding_level: 0
    webui_uses_order:
      type: cna.qualityModel.relationships.AttachesTo.DataAggregate
      metadata:
        label: Order
        fontSize: '12'
        size_width: '50'
        size_height: '20'
        position_xCoord: '440'
        position_yCoord: '252.86'
      properties:
        usage_relation: usage
        sharding_level: 0
    aws_elastic_beanstalk_hosts_registy:
      type: cna.qualityModel.entities.HostedOn.DeploymentMapping
      properties:
        deployment: automated-declarative
        deployment_unit: Pod
        replicas: 1
        update_strategy: replace
        automated_restart_policy: onProcessFailure
        assigned_account: default-account
        resource_requirements: unstated
    aws_rds_hosts_db:
      type: cna.qualityModel.entities.HostedOn.DeploymentMapping
      properties:
        deployment: automated-imperative
        deployment_unit: RDS Instance
        replicas: 1
        update_strategy: in-place
        automated_restart_policy: never
        assigned_account: default-account
        resource_requirements: unstated
    aws_elastic_beanstalk_hosts_persistence:
      type: cna.qualityModel.entities.HostedOn.DeploymentMapping
      properties:
        deployment: automated-declarative
        deployment_unit: Task Definition
        replicas: 1
        update_strategy: rolling
        automated_restart_policy: onHealthFailure
        assigned_account: default-account
        resource_requirements: unstated
    aws_elastic_beanstalk_hosts_recommender:
      type: cna.qualityModel.entities.HostedOn.DeploymentMapping
      properties:
        deployment: automated-declarative
        deployment_unit: Task Definition
        replicas: 1
        update_strategy: rolling
        automated_restart_policy: onHealthFailure
        assigned_account: default-account
        resource_requirements: unstated
    aws_elastic_beanstalk_hosts_imageprovider:
      type: cna.qualityModel.entities.HostedOn.DeploymentMapping
      properties:
        deployment: automated-declarative
        deployment_unit: Task Definition
        replicas: 1
        update_strategy: rolling
        automated_restart_policy: onHealthFailure
        assigned_account: default-account
        resource_requirements: unstated
    aws_elastic_beanstalk_hosts_auth:
      type: cna.qualityModel.entities.HostedOn.DeploymentMapping
      properties:
        deployment: automated-declarative
        deployment_unit: Task Definition
        replicas: 1
        update_strategy: rolling
        automated_restart_policy: onHealthFailure
        assigned_account: default-account
        resource_requirements: unstated
    aws_elastic_beanstalk_hosts_webui:
      type: cna.qualityModel.entities.HostedOn.DeploymentMapping
      properties:
        deployment: automated-declarative
        deployment_unit: Beanstalk Application
        replicas: 1
        update_strategy: rolling
        automated_restart_policy: onHealthFailure
        assigned_account: default-account
        resource_requirements: unstated
    persistence_linksTo_sql:
      type: cna.qualityModel.entities.ConnectsTo.Link
      properties:
        relation_type: ''
        timeout: 0
        retries: 0
        circuit_breaker: none
    persistence_linksTo_remove_service_location:
      type: cna.qualityModel.entities.ConnectsTo.Link
      properties:
        relation_type: ''
        timeout: 0
        retries: 0
        circuit_breaker: none
    persistence_linksTo_add_service_location:
      type: cna.qualityModel.entities.ConnectsTo.Link
      properties:
        relation_type: ''
        timeout: 0
        retries: 0
        circuit_breaker: none
    recommender_linksTo_remove_service_location:
      type: cna.qualityModel.entities.ConnectsTo.Link
      properties:
        relation_type: ''
        timeout: 0
        retries: 0
        circuit_breaker: none
    recommender_linksTo_add_service_location:
      type: cna.qualityModel.entities.ConnectsTo.Link
      properties:
        relation_type: ''
        timeout: 0
        retries: 0
        circuit_breaker: none
    recommender_linksTo_generatedb:
      type: cna.qualityModel.entities.ConnectsTo.Link
      properties:
        relation_type: ''
        timeout: 0
        retries: 0
        circuit_breaker: none
    recommender_linksTo_getentities:
      type: cna.qualityModel.entities.ConnectsTo.Link
      properties:
        relation_type: ''
        timeout: 0
        retries: 0
        circuit_breaker: none
    imageprovider_linksTo_getentities:
      type: cna.qualityModel.entities.ConnectsTo.Link
      properties:
        relation_type: ''
        timeout: 0
        retries: 0
        circuit_breaker: none
    imageprovider_linksTo_generatedb:
      type: cna.qualityModel.entities.ConnectsTo.Link
      properties:
        relation_type: ''
        timeout: 0
        retries: 0
        circuit_breaker: none
    imageprovider_linksTo_add_service_location:
      type: cna.qualityModel.entities.ConnectsTo.Link
      properties:
        relation_type: ''
        timeout: 0
        retries: 0
        circuit_breaker: none
    imageprovider_linksTo_remove_service_location:
      type: cna.qualityModel.entities.ConnectsTo.Link
      properties:
        relation_type: ''
        timeout: 0
        retries: 0
        circuit_breaker: none
    auth_linksTo_getentity:
      type: cna.qualityModel.entities.ConnectsTo.Link
      properties:
        relation_type: ''
        timeout: 0
        retries: 0
        circuit_breaker: none
    auth_linksTo_createentity:
      type: cna.qualityModel.entities.ConnectsTo.Link
      properties:
        relation_type: ''
        timeout: 0
        retries: 0
        circuit_breaker: none
    webui_linksTo_updatequantity:
      type: cna.qualityModel.entities.ConnectsTo.Link
      properties:
        relation_type: ''
        timeout: 0
        retries: 0
        circuit_breaker: none
    webui_linksTo_remove:
      type: cna.qualityModel.entities.ConnectsTo.Link
      properties:
        relation_type: ''
        timeout: 0
        retries: 0
        circuit_breaker: none
    webui_linksTo_placeorder:
      type: cna.qualityModel.entities.ConnectsTo.Link
      properties:
        relation_type: ''
        timeout: 0
        retries: 0
        circuit_breaker: none
    webui_linksTo_logout:
      type: cna.qualityModel.entities.ConnectsTo.Link
      properties:
        relation_type: ''
        timeout: 0
        retries: 0
        circuit_breaker: none
    webui_linksTo_login:
      type: cna.qualityModel.entities.ConnectsTo.Link
      properties:
        relation_type: ''
        timeout: 0
        retries: 0
        circuit_breaker: none
    webui_linksTo_isloggedin:
      type: cna.qualityModel.entities.ConnectsTo.Link
      properties:
        relation_type: ''
        timeout: 0
        retries: 0
        circuit_breaker: none
    webui_linksTo_add:
      type: cna.qualityModel.entities.ConnectsTo.Link
      properties:
        relation_type: ''
        timeout: 0
        retries: 0
        circuit_breaker: none
    webui_linksTo_finished:
      type: cna.qualityModel.entities.ConnectsTo.Link
      properties:
        relation_type: ''
        timeout: 0
        retries: 0
        circuit_breaker: none
    webui_linksTo_getwebimages:
      type: cna.qualityModel.entities.ConnectsTo.Link
      properties:
        relation_type: ''
        timeout: 0
        retries: 0
        circuit_breaker: none
    webui_linksTo_getproductimages:
      type: cna.qualityModel.entities.ConnectsTo.Link
      properties:
        relation_type: ''
        timeout: 0
        retries: 0
        circuit_breaker: none
    webui_linksTo_regenerateimages:
      type: cna.qualityModel.entities.ConnectsTo.Link
      properties:
        relation_type: ''
        timeout: 0
        retries: 0
        circuit_breaker: none
    webui_linksTo_getinstances:
      type: cna.qualityModel.entities.ConnectsTo.Link
      properties:
        relation_type: ''
        timeout: 0
        retries: 0
        circuit_breaker: none
    webui_linksTo_generatedb:
      type: cna.qualityModel.entities.ConnectsTo.Link
      properties:
        relation_type: ''
        timeout: 0
        retries: 0
        circuit_breaker: none
    webui_linksTo_getentity:
      type: cna.qualityModel.entities.ConnectsTo.Link
      properties:
        relation_type: ''
        timeout: 0
        retries: 0
        circuit_breaker: none
    webui_linksTo_getentities:
      type: cna.qualityModel.entities.ConnectsTo.Link
      properties:
        relation_type: ''
        timeout: 0
        retries: 0
        circuit_breaker: none
    webui_linksTo_train:
      type: cna.qualityModel.entities.ConnectsTo.Link
      properties:
        relation_type: ''
        timeout: 0
        retries: 0
        circuit_breaker: none
    webui_linksTo_recommend:
      type: cna.qualityModel.entities.ConnectsTo.Link
      properties:
        relation_type: ''
        timeout: 0
        retries: 0
        circuit_breaker: none
